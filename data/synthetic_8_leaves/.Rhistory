install.packages("castor")
Ntips = 100
tree = generate_random_tree(list(birth_rate_intercept=1),max_tips=Ntips)$tree
tree = castor.generate_random_tree(list(birth_rate_intercept=1),max_tips=Ntips)$tree
import castor
install.packages('castor')
castor
packageDescription('castor')
castor::generate_random_tree(ist(birth_rate_intercept=1),max_tips=100)$tree
castor::generate_random_tree(list(birth_rate_intercept=1),max_tips=100)$tree
tip_states = simulate_ou_model(tree, stationary_mean=0, spread=1, decay_rate=0.001)$tip_states
tip_states = castor::simulate_ou_model(tree, stationary_mean=0, spread=1, decay_rate=0.001)$tip_states
tree=castor::generate_random_tree(list(birth_rate_intercept=1),max_tips=100)$tree
tip_states = castor::simulate_ou_model(tree, stationary_mean=0, spread=1, decay_rate=0.001)$tip_states
node_states = castor::asr_squared_change_parsimony(tree, tip_states, weighted=TRUE)$ancestral_states
library(castor)
library(Rcpp)
library(castor)
text.string<-"(((a,b),(c,d)),(e,f))"
t1<-read_tree(text.string)
plot(t1)
library(ape)
install.packages("ape")
str(t1)
plotTree(t1)
library(phyTools)
install.packages("phytools")
library(ape)
install.packages("ape")
library()
install.packages("ape")
install.packages("ape")
library()
install.packages("phyTools")
install.packages("phytools")
install.packages("ace")
install.packages("treesearch")
install.packages("TreeSearch")
install.packages('TreeSearch')
install.packages("ape")
library()
install.packages('TreeSearch')
install.packages('devtools')
devtools::install_github('ms609/TreeSearch')
library('devtools')
library()
install.packages('devtools')
devtools::install_github('ms609/TreeSearch')
install.packages('devtools')
devtools::install_github('ms609/TreeSearch')
install.packages("devtools")
cm <- Day2016
Claddis::AncStateEstMatrix
library(phangorn)
library(ape)
library(phangorn)
data(woodmouse)
woodmouse
class(woodmouse)
# for this vignette we create a path to the files we want to load
fdir <- system.file("extdata/trees", package = "phangorn")
fdir
woodmouse
class(woodmouse)
woodmouse <- read.phyDat(file.path(fdir,"woodmouse.fasta"),format="fasta")
woodmouse
class(woodmouse)
class(woodmouse) <- append(class(woodmouse),"phangs")
class(woodmouse)
phangorn::read.phyDat
phangorn::phyDat
readPhangs <- function(data)
{  f <- read.phyDat(data)}
readPhangs <- function(data)
{  f <- read.phyDat(data)
class(f) <- append(class(f), "phangs")
f}
woodP <- readPhangs(file.path(fdir,"woodmouse.fasta"))
woodP <- readPhangs(file.path(fdir))
readPhangs
readPhangs(data)
woodmouse
readPhangs(woodmouse)
phyDat(woodmouse)
phyDat
readPhangs
readPhangs <- function(data) {}
readPhangs <- function(data) {
f <- phyDat(data)data
readPhangs <- function(data) {
f <- phyDat(data)
class(f) <- append(class(f), "phangs")
f }
readPhangs(woodmouse)
class(woodmouse)
readPhangs
library(Claddis)
library(TreeSearch)
distances <- MorphDistMatrix(Day2016)
distances$DistanceMetric
distances$DistanceMatrix
distances$ComparableCharacterMatrix
CharacterDependencies <- matrix(c(8, 7), ncol = 2,
byrow = TRUE, dimnames = list(c(),
c("DependentCharacter",
"IndependentCharacter")))
CharacterDependencies
distances <- MorphDistMatrix(Day2016,
InapplicableBehaviour = "HSJ",
CharacterDependencies = CharacterDependencies,
Alpha = 0.5)
distances$DistanceMetric
distances$DistanceMatrix
Day2016
Day2016$Topper
Day2016$Matrix_1
Day2016$Matrix_2
source('~/gitHub/phangs/dissimilarity_functions.R')
source('~/phangsScorer3.R')
#Running phTreeSearch on sample data set:
library(Claddis,TreeSearch)
# read matrix into Claddis "object" format
dat<-Claddis::ReadMorphNexus('/Users/stjohn/gitHub/phangs/data/matrix2-4.nex')
# read in PhyDat data
phy24 <- TreeSearch::ReadAsPhyDat('/Users/stjohn/gitHub/phangs/data/matrix2-4.nex')
# read in the types:
types24 <-read.table('/Users/stjohn/gitHub/phangs/data/type2-4.txt')
colnames(types24)<-c('Char','Type','Sub')
phangs24 <- phangs(phy24,dat,types24)
# read trees as phylo objects
tree<-read.nexus('/Users/stjohn/gitHub/phangs/data/matrix2-4.nex')
print(tree)
#Sample search:
phTreeSearch2(TreeSearch::RenumberTips(tree[[1]],names(phy24)),phangs24, InitializeData = InitializePhangs,
CleanUpData = UnloadPhangs, TreeScorer = hsjScorer)
source('~/gitHub/phangs/dissimilarity_functions.R')
source('~/phangsScorer3.R')
source('~/gitHub/phangs/runningSearch.R')
source('~/phangsScorer3.R')
hsjTS(tree[[1]],phangs24)
source('~/phangsScorer3.R')
hsjTS(tree[[1]],phangs24)
source('~/phangsScorer3.R')
hsjTS(tree[[1]],phangs24)
source('~/gitHub/phangs/phangsScorer2.R')
source('~/gitHub/phangs/runningSearch.R')
source('~/phangsScorer3.R')
source('~/gitHub/phangs/runningSearch.R')
source('~/phangsScorer3.R')
hsjTS(tree[[1]],phangs24)
source('~/phangsScorer3.R')
hsjTS(tree[[1]],phangs24)
str(types24)
types24$Char
list(types24$Char)
str(types24$Char)
int[1:5]
c(1:5)
x=3
c(1:(x+1))
str(types24$Char)
str(types24)
str(types24$Type)
types24$Type
types24$Type[1:3]
types24$Type[c(1,2:4)]
types24[2:4]
types24$Char[2:4]
types24$Type[2:4]
types24
types24[1:3,]
#print("tmpMx is")
#print(tmpMx$Matrix)
#Use the list of the secondaries (assuming only 1 controlling primary: == 1)
#If the controlling primary is 0, need to set the secondaries to ""
for (s in secondaries) {
if (l1 == "0"){
#Set secondaries to "" in c1
tmpMx$Matrix[c1,s]<-""
}
if (l2 == "0"){
#Set secondaries to "" in c2
tmpMx$Matrix[c2,s]<-""
}
if (p == "0"){
#Set secondaries to "" in par
tmpMx$Matrix[par,s]<-""
}
}          tmpMx$Matrix <- tmpMx$Matrix[c(c1,c2,par),]
source('~/phangsScorer3.R')
source('~/phangsScorer3.R')
source('~/phangsScorer3.R')
hsjTS(tree[[1]],phangs24)
hsjTS(tree[[1]],phangs24)
hsjTS(tree[[1]],phangs24)
source('~/phangsScorer3.R')
hsjTS(tree[[1]],phangs24)
source('~/phangsScorer3.R')
hsjTS(tree[[1]],phangs24)
source('~/phangsScorer3.R')
hsjTS(tree[[1]],phangs24)
types24
types24[c(1,2:3)]
types24[c(1,2:3),]
source('~/phangsScorer3.R')
types24[c(1,2:3),]
hsjTS(tree[[1]],phangs24)
types24
phangs24
phangs24[[1]]
phangs24[[2]]
source('~/phangsScorer3.R')
hsjTS(tree[[1]],phangs24)
source('~/phangsScorer3.R')
hsjTS(tree[[1]],phangs24)
source('~/phangsScorer3.R')
hsjTS(tree[[1]],phangs24)
source('~/phangsScorer3.R')
hsjTS(tree[[1]],phangs24)
source('~/phangsScorer3.R')
hsjTS(tree[[2]],phangs24)
hsjTS(tree[[1]],phangs24)
source('~/phangsScorer3.R')
hsjTS(tree[[1]],phangs24)
source('~/gitHub/phangs/runningSearch.R')
source('~/phangsScorer3.R')
hsjTS(tree[[1]],phangs24)
x <- hsjTS(tree[[1]],phangs24)
x
print(x)
source('~/phangsScorer3.R')
hsjTS(tree[[1]],phangs24)
source('~/phangsScorer3.R')
hsjTS(tree[[1]],phangs24)
source('~/phangsScorer3.R')
hsjTS(tree[[1]],phangs24)
source('~/phangsScorer3.R')
source('~/phangsScorer3.R')
hsjTS(tree[[1]],phangs24)
source('~/phangsScorer3.R')
hsjTS(tree[[1]],phangs24)
source('~/phangsScorer3.R')
hsjTS(tree[[1]],phangs24)
source('~/phangsScorer3.R')
hsjTS(tree[[1]],phangs24)
source('~/phangsScorer3.R')
hsjTS(tree[[1]],phangs24)
source('~/phangsScorer3.R')
hsjTS(tree[[1]],phangs24)
source('~/phangsScorer3.R')
hsjTS(tree[[1]],phangs24)
source('~/phangsScorer3.R')
hsjTS(tree[[1]],phangs24)
source('~/phangsScorer3.R')
hsjTS(tree[[1]],phangs24)
source('~/phangsScorer3.R')
hsjTS(tree[[1]],phangs24)
source('~/phangsScorer3.R')
hsjTS(tree[[1]],phangs24)
source('~/phangsScorer3.R')
hsjTS(tree[[1]],phangs24)
source('~/gitHub/phangs/runningSearch.R')
phTreeSearch2(TreeSearch::RenumberTips(tree[[1]],names(phy24)),phangs24, InitializeData = InitializePhangs,
CleanUpData = UnloadPhangs, TreeScorer = hsjScorer)
phTreeSearch2(TreeSearch::RenumberTips(tree[[1]],names(phy24)),phangs24, InitializeData = InitializePhangs,
CleanUpData = UnloadPhangs, TreeScorer = hsjScorer)
phTreeSearch2(TreeSearch::RenumberTips(tree[[2]],names(phy24)),phangs24, InitializeData = InitializePhangs,
CleanUpData = UnloadPhangs, TreeScorer = hsjScorer)
phTreeSearch2(TreeSearch::RenumberTips(tree[[2]],names(phy24)),phangs24, InitializeData = InitializePhangs,
CleanUpData = UnloadPhangs, TreeScorer = hsjScorer,maxIter=1000)
phTreeSearch2(TreeSearch::RenumberTips(tree[[2]],names(phy24)),phangs24, InitializeData = InitializePhangs,
CleanUpData = UnloadPhangs, TreeScorer = hsjScorer,maxIter=1000)
phTreeSearch2(TreeSearch::RenumberTips(tree[[2]],names(phy24)),phangs24, InitializeData = InitializePhangs,
CleanUpData = UnloadPhangs, TreeScorer = hsjScorer,maxIter=10000)
phTreeSearch2(TreeSearch::RenumberTips(tree[[1]],names(phy24)),phangs24, InitializeData = InitializePhangs,
CleanUpData = UnloadPhangs, TreeScorer = hsjScorer,maxIter=10000)
phTreeSearch2(TreeSearch::RenumberTips(tree[[1]],names(phy24)),phangs24, InitializeData = InitializePhangs,
CleanUpData = UnloadPhangs, TreeScorer = hsjScorer,maxIter=1000)
source('~/phangsScorer3.R')
phTreeSearch2(TreeSearch::RenumberTips(tree[[1]],names(phy24)),phangs24, InitializeData = InitializePhangs,
CleanUpData = UnloadPhangs, TreeScorer = hsjScorer,maxIter=1000)
phTreeSearch2(TreeSearch::RenumberTips(tree[[1]],names(phy24)),phangs24, InitializeData = InitializePhangs,
CleanUpData = UnloadPhangs, TreeScorer = hsjScorer,maxIter=100000)
phTreeSearch2(TreeSearch::RenumberTips(tree[[2]],names(phy24)),phangs24, InitializeData = InitializePhangs,
CleanUpData = UnloadPhangs, TreeScorer = hsjScorer,maxIter=100000)
phTreeSearch2(TreeSearch::RenumberTips(tree[[2]],names(phy24)),phangs24, InitializeData = InitializePhangs,
CleanUpData = UnloadPhangs, TreeScorer = hsjScorer,maxIter=1000000)
phTreeSearch2(TreeSearch::RenumberTips(tree[[2]],names(phy24)),phangs24, InitializeData = InitializePhangs,
CleanUpData = UnloadPhangs, TreeScorer = hsjScorer,maxIter=1000000)
source('~/gitHub/phangs/dissimilarity_functions.R')
source('~/phangsScorer3.R')
#Sample search:
phTreeSearch2(TreeSearch::RenumberTips(tree[[1]],names(phy24)),phangs24, InitializeData = InitializePhangs,
CleanUpData = UnloadPhangs, TreeScorer = hsjScorer)
library(TreeSearch)
#Sample search:
phTreeSearch2(TreeSearch::RenumberTips(tree[[1]],names(phy24)),phangs24, InitializeData = InitializePhangs,
CleanUpData = UnloadPhangs, TreeScorer = hsjScorer)
#Sample search:
phTreeSearch2(TreeSearch::RenumberTips(tree[[1]],names(phy24)),phangs24, InitializeData = InitializePhangs,
CleanUpData = UnloadPhangs, TreeScorer = hsjScorer,maxIter = 10000)
#Sample search:
phTreeSearch2(TreeSearch::RenumberTips(tree[[2]],names(phy24)),phangs24, InitializeData = InitializePhangs,
CleanUpData = UnloadPhangs, TreeScorer = hsjScorer,maxIter = 10000)
#Sample search:
phTreeSearch2(TreeSearch::RenumberTips(tree[[2]],names(phy24)),phangs24, InitializeData = InitializePhangs,
CleanUpData = UnloadPhangs, TreeScorer = hsjScorer,maxIter = 100000)
#Sample search:
phTreeSearch2(TreeSearch::RenumberTips(tree[[2]],names(phy24)),phangs24, InitializeData = InitializePhangs,
CleanUpData = UnloadPhangs, TreeScorer = hsjScorer,maxIter = 1000000)
#Sample search:
phTreeSearch2(TreeSearch::RenumberTips(tree[[2]],names(phy24)),phangs24, InitializeData = InitializePhangs,
CleanUpData = UnloadPhangs, TreeScorer = hsjScorer,maxIter = 100000, maxHits = 50)
phangs24
ph24_0.1 <- phangs24
ph24_0.1[[4]] <- 0.1
#Sample search:
phTreeSearch2(TreeSearch::RenumberTips(tree[[2]],names(phy24)),ph24_0.1, InitializeData = InitializePhangs,
CleanUpData = UnloadPhangs, TreeScorer = hsjScorer,maxIter = 100000, maxHits = 50)
#Sample search:
phTreeSearch2(TreeSearch::RenumberTips(tree[[2]],names(phy24)),ph24_0.1, InitializeData = InitializePhangs,
CleanUpData = UnloadPhangs, TreeScorer = hsjScorer,maxIter = 10)
#Sample search:
phTreeSearch2(TreeSearch::RenumberTips(tree[[1]],names(phy24)),ph24_0.1, InitializeData = InitializePhangs,
CleanUpData = UnloadPhangs, TreeScorer = hsjScorer,maxIter = 10)
#Sample search:
phTreeSearch2(TreeSearch::RenumberTips(tree[[1]],names(phy24)),ph24_0.1, InitializeData = InitializePhangs,
CleanUpData = UnloadPhangs, TreeScorer = hsjScorer,maxIter = 10000)
#Sample search:
phTreeSearch2(TreeSearch::RenumberTips(tree[[1]],names(phy24)),ph24_0.1, InitializeData = InitializePhangs,
CleanUpData = UnloadPhangs, TreeScorer = hsjScorer,maxIter = 100000)
#Sample search:
phTreeSearch2(TreeSearch::RenumberTips(tree[[2]],names(phy24)),ph24_0.1, InitializeData = InitializePhangs,
CleanUpData = UnloadPhangs, TreeScorer = hsjScorer,maxIter = 100000)
#Sample search:
phTreeSearch2(TreeSearch::RenumberTips(tree[[2]],names(phy24)),ph24_0.1, InitializeData = InitializePhangs,
CleanUpData = UnloadPhangs, TreeScorer = hsjScorer,maxIter = 100000)
ph24_1.0 <- phangs24
ph24_1.0[[4]] <- 1.0
#Sample search:
phTreeSearch2(TreeSearch::RenumberTips(tree[[2]],names(phy24)),ph24_1.0, InitializeData = InitializePhangs,
CleanUpData = UnloadPhangs, TreeScorer = hsjScorer,maxIter = 100000)
#Sample search:
phTreeSearch2(TreeSearch::RenumberTips(tree[[2]],names(phy24)),ph24_1.0, InitializeData = InitializePhangs,
CleanUpData = UnloadPhangs, TreeScorer = hsjScorer,maxIter = 10)
#Sample search:
phTreeSearch2(TreeSearch::RenumberTips(tree[[1]],names(phy24)),ph24_1.0, InitializeData = InitializePhangs,
CleanUpData = UnloadPhangs, TreeScorer = hsjScorer,maxIter = 10)
#Sample search:
phTreeSearch2(TreeSearch::RenumberTips(tree[[1]],names(phy24)),ph24_1.0, InitializeData = InitializePhangs,
CleanUpData = UnloadPhangs, TreeScorer = hsjScorer,maxIter = 100000)
dat43 <- <-Claddis::ReadMorphNexus('/Users/stjohn/gitHub/phangs/data/matrix2-4.nex')
dat43 <- Claddis::ReadMorphNexus('/Users/stjohn/gitHub/phangs/data/matrix2-4.nex')
dat43 <- <-Claddis::ReadMorphNexus('/Users/stjohn/gitHub/phangs/data/matrix4-3.nex')
dat43 <- Claddis::ReadMorphNexus('/Users/stjohn/gitHub/phangs/data/matrix4-3.nex')
types43 <- read.table('/Users/stjohn/gitHub/phangs/data/type4-3.txt')
colnames(types43)<-c('Char','Type','Sub')
phy43 <- <- TreeSearch::ReadAsPhyDat('/Users/stjohn/gitHub/phangs/data/matrix4-3.nex'0
phy43 <- <- TreeSearch::ReadAsPhyDat('/Users/stjohn/gitHub/phangs/data/matrix4-3.nex')
phy43 <-  TreeSearch::ReadAsPhyDat('/Users/stjohn/gitHub/phangs/data/matrix4-3.nex')
ph43  <- phange(phy43,dat43,types43)
ph43  <- phangs(phy43,dat43,types43)
phTreeSearch2(tree[[1]],ph43, nitializeData = InitializePhangs,
CleanUpData = UnloadPhangs, TreeScorer = hsjScorer)
phTreeSearch2(tree[[1]],ph43, InitializeData = InitializePhangs,
CleanUpData = UnloadPhangs, TreeScorer = hsjScorer)
phTreeSearch2(tree[[2]],ph43, InitializeData = InitializePhangs,
CleanUpData = UnloadPhangs, TreeScorer = hsjScorer)
library(treenomial)
library(treenomial)
install.packages("treenomial")
library(treenomial)
library(ape)
allBinTenRealCoeff <- allTrees(10, type = "phylo")
library(phangorn)
allTrees(5)
t <-allTrees(5)
t
print(t)
t[1]
print(t[[1]])
plot(t[[1]])
)
plot(t[[2]])
t <-allTrees(6)
plot(t[[2]])
source('~/gitHub/phangs/runningSearch.R')
source('~/gitHub/phangs/phangsScorer7.R')
source('~/gitHub/phangs/dissimilarity_functions.R')
library(Claddis)
library(TreeTools)
library(TreeSearch)
setwd("~/phangs")
source('dissimilarity_functions.R')
source('phangsScorer6.R')
#Default value:
alpha = 0.5
myrDat <- ReadMorphNexus('data/myriapods_200_no-tertiaries.nex')
myrDat <- ReadMorphNexus('data/myriapods_200_no-tertiaries.nex')
source('~/Desktop/runs/runningRatchet.R')
source('~/gitHub/phangs/code/dissimilarity_functions.R')
source('~/gitHub/phangs/code/phangsScorer8.R')
#Running phTreeSearch on sample data set:
library(Claddis)
library(TreeSearch)
library(TreeTools)
setwd("~/gitHub/hsj/data/synthetic_8_leaves")
# read in the types:
typesBal8 <-read.table('typeBal8.txt')
# read in the types:
typesBal8 <-read.table('typeBal8-13.txt')
colnames(typesBal8)<-c('Char','Type','Sub')
phangsBal8 <- phangs(phyBal8,datBal8,typesBal8)
#score trees with 8 taxa
eight.trees<-allTrees(n=8,tip.label = c('t1','t2','t3','t4','t5','t6','t7','t8'),rooted = TRUE)
hsjTS(eight.trees[[1]],phangsBal8)
phyBal8 <- TreeTools::ReadAsPhyDat('balanced8-13.nex')
# read in the types:
typesBal8 <-read.table('typeBal8-13.txt')
colnames(typesBal8)<-c('Char','Type','Sub')
phangsBal8 <- phangs(phyBal8,datBal8,typesBal8)
phyBal8 <- TreeTools::ReadAsPhyDat('balanced8-13.nex')
phangsBal8 <- phangs(phyBal8,datBal8,typesBal8)
datBal8<-Claddis::ReadMorphNexus('balanced8-13.nex')
phangsBal8 <- phangs(phyBal8,datBal8,typesBal8)
hsjTS(eight.trees[[1]],phangsBal8)
hsjTS(eight.trees[[2]],phangsBal8)
hsjTS(eight.trees[[3]],phangsBal8)
hsjTS(eight.trees[[4]],phangsBal8)
hsj.scores<-vector()
for (i in 1:length(eight.trees)){
hsj.scores[i]<-hsjTS(eight.trees[[i]],phangsBal8)
}
hsjTS(eight.trees[[3]],phangsBal8)
source('~/gitHub/phangs/code/phangsScorer8.R')
hsjTS(eight.trees[[3]],phangsBal8)
for (i in 1:length(eight.trees)){
hsj.scores[i]<-hsjTS(eight.trees[[i]],phangsBal8)
}
source('~/gitHub/phangs/code/phangsScorer8.R')
# read in the types:
typesBal8 <-read.table('typeBal8-13.txt')
colnames(typesBal8)<-c('Char','Type','Sub')
phangsBal8 <- phangs(phyBal8,datBal8,typesBal8)
hsjTS(eight.trees[[1]],phangsBal8)
hsjTS(eight.trees[[2]],phangsBal8)
hsjTS(eight.trees[[1000]],phangsBal8)
hsj.scores<-vector()
for (i in 1:length(eight.trees)){
hsj.scores[i]<-hsjTS(eight.trees[[i]],phangsBal8)
}
min(hsj.scores)
which(hsj.scores == min(hsj.scores))
plot(consensus(which(hsj.scores == min(hsj.scores))))
plot(consensus(eight.trees[which(hsj.scores == min(hsj.scores)])))
plot(consensus(eight.trees[which(hsj.scores == min(hsj.scores))]))
plot(consensus(eight.trees[which(hsj.scores == min(hsj.scores))],p=0.5))
write.tree(eight.trees[which(hsj.scores == min(hsj.scores))],"~/Desktop/majRulMPT_bal_8_13.tre")
